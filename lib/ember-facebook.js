// Generated by CoffeeScript 1.7.1
(function() {
  (function(exports) {
    Ember.Facebook = Ember.Mixin.create({
      FBUser: void 0,
      appId: void 0,
      facebookParams: Ember.Object.create(),
      fetchPicture: true,
      locale: 'en_US',
      init: function() {
        this._super();
        return window.FBApp = this;
      },
      facebookConfigChanged: (function() {
        this.removeObserver('appId');
        window.fbAsyncInit = (function(_this) {
          return function() {
            return _this.fbAsyncInit();
          };
        })(this);
        return $((function(_this) {
          return function() {
            var js;
            $('body').append($("<div>").attr('id', 'fb-root'));
            js = document.createElement('script');
            $(js).attr({
              id: 'facebook-jssdk',
              async: true,
              src: "//connect.facebook.net/" + (_this.get('locale')) + "/sdk.js"
            });
            return $('head').append(js);
          };
        })(this));
      }).observes('facebookParams', 'appId'),
      fbAsyncInit: function() {
        var facebookParams;
        facebookParams = this.get('facebookParams');
        facebookParams = facebookParams.setProperties({
          appId: this.get('appId' || facebookParams.get('appId') || void 0),
          status: facebookParams.get('status') || true,
          cookie: facebookParams.get('cookie') || true,
          xfbml: facebookParams.get('xfbml') || true,
          channelUrl: facebookParams.get('channelUrl') || void 0,
          version: facebookParams.get('version') || 'v2.3'
        });
        FB.init(facebookParams);
        this.set('FBloading', true);
        FB.Event.subscribe('auth.authResponseChange', (function(_this) {
          return function(response) {
            return _this.updateFBUser(response);
          };
        })(this));
        return FB.getLoginStatus((function(_this) {
          return function(response) {
            return _this.updateFBUser(response);
          };
        })(this));
      },
      updateFBUser: function(response) {
        if (response.status === 'connected') {
          return FB.api('/me', (function(_this) {
            return function(user) {
              var FBUser;
              FBUser = Ember.Object.create(user);
              FBUser.set('accessToken', response.authResponse.accessToken);
              FBUser.set('expiresIn', response.authResponse.expiresIn);
              if (_this.get('fetchPicture')) {
                return FB.api('/me/picture', function(resp) {
                  FBUser.picture = resp.data.url;
                  _this.set('FBUser', FBUser);
                  return _this.set('FBloading', false);
                });
              } else {
                _this.set('FBUser', FBUser);
                return _this.set('FBloading', false);
              }
            };
          })(this));
        } else {
          this.set('FBUser', false);
          return this.set('FBloading', false);
        }
      }
    });
    return Ember.FacebookView = Ember.View.extend({
      classNameBindings: ['className'],
      attributeBindings: [],
      init: function() {
        var attr;
        this._super();
        this.setClassName();
        return this.attributeBindings.pushObjects((function() {
          var _results;
          _results = [];
          for (attr in this) {
            if (attr.match(/^data-/) != null) {
              _results.push(attr);
            }
          }
          return _results;
        }).call(this));
      },
      setClassName: function() {
        return this.set('className', "fb-" + this.type);
      },
      parse: function() {
        if (typeof FB !== "undefined" && FB !== null) {
          return FB.XFBML.parse(this.$().parent()[0].context);
        }
      },
      didInsertElement: function() {
        return this.parse();
      }
    });
  })({});

}).call(this);
